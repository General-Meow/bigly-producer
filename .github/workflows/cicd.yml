name: cicd
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: run tests
        run: ./gradlew clean test -i

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: run code quality checks
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube -i

  package:
    runs-on: ubuntu-latest
    needs: [code-quality, tests]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: build with gradle
        run: ./gradlew clean bootJar

      - name: get artifact version
        id: image_version_step
        run: echo "::set-output name=ARTIFACT_VERSION::$(./gradlew properties | grep version | awk '{print $2}')"

      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bigly-producer-latest
          path: ./build/libs/bigly-producer*.jar

      - name: build docker image
        run: |
          ./gradlew clean bootBuildImage --imageName=generalmeow/bigly-producer
          docker tag generalmeow/bigly-producer:latest generalmeow/bigly-producer:${{ steps.image_version_step.outputs.ARTIFACT_VERSION }}

      - name: scan
        uses: anchore/scan-action@v2
        with:
          image: "generalmeow/bigly-producer:latest"
#          fail-build: true
#          severity-cutoff: critical

      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: upload docker image
        run: |
          docker push generalmeow/bigly-producer:${{ steps.image_version_step.outputs.ARTIFACT_VERSION }}
          docker push generalmeow/bigly-producer:latest
